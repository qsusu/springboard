/* Welcome to the SQL mini project. You will carry out this project partly in
the PHPMyAdmin interface, and partly in Jupyter via a Python connection.

This is Tier 2 of the case study, which means that there'll be less guidance for you about how to setup
your local SQLite connection in PART 2 of the case study. This will make the case study more challenging for you: 
you might need to do some digging, and revise the Working with Relational Databases in Python chapter in the previous resource.

Otherwise, the questions in the case study are exactly the same as with Tier 1. 

PART 1: PHPMyAdmin
You will complete questions 1-9 below in the PHPMyAdmin interface. 
Log in by pasting the following URL into your browser, and
using the following Username and Password:

URL: https://sql.springboard.com/
Username: student
Password: learn_sql@springboard

The data you need is in the "country_club" database. This database
contains 3 tables:
    i) the "Bookings" table,
    ii) the "Facilities" table, and
    iii) the "Members" table.

In this case study, you'll be asked a series of questions. You can
solve them using the platform, but for the final deliverable,
paste the code for each solution into this script, and upload it
to your GitHub.

Before starting with the questions, feel free to take your time,
exploring the data, and getting acquainted with the 3 tables. */


/* QUESTIONS 
/* Q1: Some of the facilities charge a fee to members, but some do not.
Write a SQL query to produce a list of the names of the facilities that do. */

SELECT name
FROM `Facilities`
WHERE membercost !=0

Host: localhost Database: country_club Generation Time: Aug 31, 2020 at 11:48 PM Generated by: phpMyAdmin 4.0.10deb1 / MySQL 5.5.43-0ubuntu0.14.04.1 SQL query: SELECT name FROM `Facilities` WHERE membercost != 0 LIMIT 0, 30 ; Rows: 5
￼
 This table does not contain a unique column. Grid edit, checkbox, Edit, Copy and Delete features are not available.

name	
Tennis Court 1	
Tennis Court 2	
Massage Room 1	
Massage Room 2	
Squash Court	

/* Q2: How many facilities do not charge a fee to members? */

SELECT COUNT( name )
FROM `Facilities`
WHERE membercost !=0

SQL result
Host: localhost Database: country_club Generation Time: Aug 31, 2020 at 11:49 PM Generated by: phpMyAdmin 4.0.10deb1 / MySQL 5.5.43-0ubuntu0.14.04.1 SQL query: SELECT count(name) FROM `Facilities` WHERE membercost != 0; Rows: 1
￼
 This table does not contain a unique column. Grid edit, checkbox, Edit, Copy and Delete features are not available.

count(name)	
5	

/* Q3: Write an SQL query to show a list of facilities that charge a fee to members,
where the fee is less than 20% of the facility's monthly maintenance cost.
Return the facid, facility name, member cost, and monthly maintenance of the
facilities in question. */

SELECT facid, name, membercost, monthlymaintenance
FROM `Facilities`
WHERE membercost < monthlymaintenance * 0.2

SQL result
Host: localhost Database: country_club Generation Time: Aug 31, 2020 at 11:47 PM Generated by: phpMyAdmin 4.0.10deb1 / MySQL 5.5.43-0ubuntu0.14.04.1 SQL query: SELECT facid, name, membercost, monthlymaintenance FROM `Facilities` WHERE membercost <= monthlymaintenance * 0.2 LIMIT 0, 30 ; Rows: 9

facid	name	membercost	monthlymaintenance	
0	Tennis Court 1	5.0	200	
1	Tennis Court 2	5.0	200	
2	Badminton Court	0.0	50	
3	Table Tennis	0.0	10	
4	Massage Room 1	9.9	3000	
5	Massage Room 2	9.9	3000	
6	Squash Court	3.5	80	
7	Snooker Table	0.0	15	
8	Pool Table	0.0	15	

/* Q4: Write an SQL query to retrieve the details of facilities with ID 1 and 5.
Try writing the query without using the OR operator. */

SELECT *
FROM `Facilities`
WHERE facid
IN ( 1, 5 )

SQL result
Host: localhost Database: country_club Generation Time: Aug 31, 2020 at 11:44 PM Generated by: phpMyAdmin 4.0.10deb1 / MySQL 5.5.43-0ubuntu0.14.04.1 SQL query: SELECT * FROM `Facilities` WHERE facid in (1, 5) ORDER BY `Facilities`.`membercost` DESC LIMIT 0, 30 ; Rows: 2

facid	name	membercost	guestcost	initialoutlay	monthlymaintenance	
5	Massage Room 2	9.9	80.0	4000	3000	
1	Tennis Court 2	5.0	25.0	8000	200	

/* Q5: Produce a list of facilities, with each labelled as
'cheap' or 'expensive', depending on if their monthly maintenance cost is
more than $100. Return the name and monthly maintenance of the facilities
in question. */

SELECT name, monthlymaintenance
	CASE WHEN monthlymaintenance > 100 THEN 'expensive'
	 	 ELSE 'cheap' END AS label
FROM `Facilities` 

/* Q6: You'd like to get the first and last name of the last member(s)
who signed up. Try not to use the LIMIT clause for your solution. */

SELECT TOP(1) 
surname, firstname FROM `Members`
ORDER BY joindate DESC

/* Q7: Produce a list of all members who have used a tennis court.
Include in your output the name of the court, and the name of the member
formatted as a single column. Ensure no duplicate data, and order by
the member name. */

SELECT DISTINCT CONCAT(m.surname,' ',m.firstname) AS fullname, f.name FROM Bookings
INNER JOIN Members AS m ON Bookings.memid = m.memid
INNER JOIN Facilities AS f ON Bookings.facid =f.facid
WHERE f.facid in (0,1)
ORDER BY fullname

SQL result
Host: localhost Database: country_club Generation Time: Sep 01, 2020 at 11:36 PM Generated by: phpMyAdmin 4.0.10deb1 / MySQL 5.5.43-0ubuntu0.14.04.1 SQL query: SELECT DISTINCT CONCAT(m.surname,' ',m.firstname) AS fullname, f.name FROM Bookings INNER JOIN Members AS m ON Bookings.memid = m.memid INNER JOIN Facilities AS f ON Bookings.facid =f.facid WHERE f.facid in (0,1) ORDER BY fullname LIMIT 0, 30 ; Rows: 30
￼
 This table does not contain a unique column. Grid edit, checkbox, Edit, Copy and Delete features are not available.

fullname	name	
Bader Florence	Tennis Court 1	
Bader Florence	Tennis Court 2	
Baker Anne	Tennis Court 1	
Baker Anne	Tennis Court 2	
Baker Timothy	Tennis Court 2	
Baker Timothy	Tennis Court 1	
Boothe Tim	Tennis Court 1	
Boothe Tim	Tennis Court 2	
Butters Gerald	Tennis Court 2	
Butters Gerald	Tennis Court 1	
Coplin Joan	Tennis Court 1	
Crumpet Erica	Tennis Court 1	
Dare Nancy	Tennis Court 2	
Dare Nancy	Tennis Court 1	
Farrell David	Tennis Court 1	
Farrell David	Tennis Court 2	
Farrell Jemima	Tennis Court 2	
Farrell Jemima	Tennis Court 1	
Genting Matthew	Tennis Court 1	
GUEST GUEST	Tennis Court 2	
GUEST GUEST	Tennis Court 1	
Hunt John	Tennis Court 2	
Hunt John	Tennis Court 1	
Jones David	Tennis Court 1	
Jones David	Tennis Court 2	
Jones Douglas	Tennis Court 1	
Joplette Janice	Tennis Court 2	
Joplette Janice	Tennis Court 1	
Owen Charles	Tennis Court 1	
Owen Charles	Tennis Court 2	


/* Q8: Produce a list of bookings on the day of 2012-09-14 which
will cost the member (or guest) more than $30. Remember that guests have
different costs to members (the listed costs are per half-hour 'slot'), and
the guest user's ID is always 0. Include in your output the name of the
facility, the name of the member formatted as a single column, and the cost.
Order by descending cost, and do not use any subqueries. */

SELECT CONCAT(m.surname,' ',m.firstname) AS fullname, f.name, starttime,
CASE WHEN m.surname LIKE 'GUEST%' THEN f.guestcost
	WHEN m.surname NOT LIKE 'GUEST%' THEN f.membercost END AS cost
FROM Bookings
INNER JOIN Members AS m ON Bookings.memid = m.memid
INNER JOIN Facilities AS f ON Bookings.facid = f.facid
WHERE (starttime LIKE '2012-09-14 %' AND m.surname NOT LIKE 'GUEST%' AND f.membercost > 30)
OR (starttime LIKE '2012-09-14 %' AND m.surname LIKE 'GUEST%' AND f.guestcost > 30)
ORDER BY cost DESC

SQL result
Host: localhost Database: country_club Generation Time: Sep 02, 2020 at 12:02 AM Generated by: phpMyAdmin 4.0.10deb1 / MySQL 5.5.43-0ubuntu0.14.04.1 SQL query: SELECT CONCAT(m.surname,' ',m.firstname) AS fullname, f.name, CASE WHEN m.surname LIKE 'GUEST%' THEN f.guestcost WHEN m.surname NOT LIKE 'GUEST%' THEN f.membercost END AS cost FROM Bookings INNER JOIN Members AS m ON Bookings.memid = m.memid INNER JOIN Facilities AS f ON Bookings.facid = f.facid WHERE (starttime LIKE '2012-09-14 %') AND (m.surname LIKE 'GUEST%' AND f.guestcost > 30) OR (m.surname NOT LIKE 'GUEST%' AND f.membercost > 30) ORDER BY f.guestcost DESC LIMIT 0, 30 ; Rows: 4
￼
 This table does not contain a unique column. Grid edit, checkbox, Edit, Copy and Delete features are not available.

fullname	name	cost	
GUEST GUEST	Massage Room 1	80.0	
GUEST GUEST	Massage Room 2	80.0	
GUEST GUEST	Massage Room 1	80.0	
GUEST GUEST	Massage Room 1	80.0	

/* Q9: This time, produce the same result as in Q8, but using a subquery. */

SELECT fullname, fec_name, starttime, cost
FROM (SELECT  
		CONCAT(m.surname,' ',m.firstname) AS fullname,
		CASE WHEN m.surname LIKE 'GUEST%' THEN f.guestcost
			WHEN m.surname NOT LIKE 'GUEST%' THEN f.membercost END AS cost,
      	f.name AS fec_name,
      	b.starttime AS starttime
		FROM Bookings as b
		INNER JOIN Members AS m ON b.memid = m.memid
		INNER JOIN Facilities AS f ON b.facid = f.facid
		WHERE (starttime LIKE '2012-09-14 %' AND m.surname NOT LIKE 'GUEST%' AND f.membercost > 30)
		OR (starttime LIKE '2012-09-14 %' AND m.surname LIKE 'GUEST%' AND f.guestcost > 30)) AS subquery
ORDER BY cost DESC

SQL result
Host: localhost Database: country_club Generation Time: Sep 08, 2020 at 09:09 PM Generated by: phpMyAdmin 4.0.10deb1 / MySQL 5.5.43-0ubuntu0.14.04.1 SQL query: SELECT fullname, fec_name, starttime, cost FROM (SELECT CONCAT(m.surname,' ',m.firstname) AS fullname, CASE WHEN m.surname LIKE 'GUEST%' THEN f.guestcost WHEN m.surname NOT LIKE 'GUEST%' THEN f.membercost END AS cost, f.name AS fec_name, b.starttime AS starttime FROM Bookings as b INNER JOIN Members AS m ON b.memid = m.memid INNER JOIN Facilities AS f ON b.facid = f.facid WHERE (starttime LIKE '2012-09-14 %' AND m.surname NOT LIKE 'GUEST%' AND f.membercost > 30) OR (starttime LIKE '2012-09-14 %' AND m.surname LIKE 'GUEST%' AND f.guestcost > 30)) AS subquery ORDER BY cost DESC ; Rows: 4

fullname	fec_name	starttime	cost	
GUEST GUEST	Massage Room 1	2012-09-14 13:00:00	80.0	
GUEST GUEST	Massage Room 1	2012-09-14 09:00:00	80.0	
GUEST GUEST	Massage Room 2	2012-09-14 11:00:00	80.0	
GUEST GUEST	Massage Room 1	2012-09-14 16:00:00	80.0	


/* PART 2: SQLite

Export the country club data from PHPMyAdmin, and connect to a local SQLite instance from Jupyter notebook 
for the following questions.  

QUESTIONS:
/* Q10: Produce a list of facilities with a total revenue less than 1000.
The output of facility name and total revenue, sorted by revenue. Remember
that there's a different cost for guests and members! */

/* Q11: Produce a report of members and who recommended them in alphabetic surname,firstname order */


/* Q12: Find the facilities with their usage by member, but not guests */


/* Q13: Find the facilities usage by month, but not guests */

